syntax = "proto3";

package iohk.jormungandr;

import "types.proto";

message TipRequest {}

message TipResponse {
    cardano.BlockDate blockdate = 1;
    cardano.HeaderHash hash = 2;
}

message GetBlocksRequest {
    repeated cardano.HeaderHash from = 1;
    cardano.HeaderHash to = 2;
}

message SetTransactionRequest {
    cardano.Transaction tx = 1;
}

// The result of processing a transaction.
enum TxStatus {
    // The transaction has been accepted.
    ACCEPTED = 0;
    // Unknown/internal error.
    UNKNOWN_ERROR = 1;
    // The signature is invalid.
    INVALID_SIGNATURE = 2;
    // The proposed transaction would result in a double spend.
    DOUBLE_SPEND = 3;
    // The proposed transaction has already been registered by the node.
    ALREADY_EXISTS = 4;
}

message SetTransactionResponse {
    TxStatus status = 1;
}

service Node {
    rpc Tip (TipRequest) returns (TipResponse);
    rpc GetBlocks (GetBlocksRequest) returns (stream cardano.Block) {
        option idempotency_level = NO_SIDE_EFFECTS;
    }
    rpc SetTransaction (SetTransactionRequest) returns (SetTransactionResponse);
}
