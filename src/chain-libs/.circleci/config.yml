version: 2
jobs:
  cargo_fetch:
    docker:
      - image: rust:latest
    working_directory: /mnt/crate
    steps:
      - checkout
      - restore_cache:
          keys:
            - cargo-v1-{{ checksum "Cargo.toml" }}-
            - cargo-v1-
      - run: cargo update
      - run: cargo fetch
      - run: cargo install cargo-junit
      - persist_to_workspace:
          root: "."
          paths:
            - Cargo.lock
      - save_cache:
          key: cargo-v2-{{ checksum "Cargo.toml" }}-{{ checksum "Cargo.lock" }}
          paths:
            - /usr/local/cargo/registry
            - /usr/local/cargo/git
            - /usr/local/cargo/bin
  test:
    docker:
      - image: rust:latest
    working_directory: /mnt/crate
    steps:
      - checkout
      - attach_workspace:
          at: "."
      - restore_cache:
          keys:
            - cargo-v2-{{ checksum "Cargo.toml" }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Print version information
          command: rustc --version; cargo --version
      - run:
          name: Build and test
          command: cargo junit --name test_output.xml
          environment:
            # Need this for the coverage run
            RUSTFLAGS: "-C link-dead-code"
      - run:
          name: Prune the output files
          command: |
            for file in target/debug/* target/debug/.??*; do
              [ -d $file -o ! -x $file ] && rm -r $file
            done
      - store_test_results:
          path: test_output.xml
      - persist_to_workspace:
          root: "."
          paths:
            - target/debug/*
  test_release:
    docker:
      - image: rust:latest
    working_directory: /mnt/crate
    steps:
      - checkout
      - attach_workspace:
          at: "."
      - restore_cache:
          keys:
            - cargo-v2-{{ checksum "Cargo.toml" }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Print version information
          command: rustc --version; cargo --version
      - run:
          name: Build and test in release profile
          command: cargo junit --name test_release_output.xml
      - store_test_results:
          path: test_release_output.xml
  test_nightly:
    docker:
      - image: rustlang/rust:nightly
    working_directory: /mnt/crate
    steps:
      - checkout
      - attach_workspace:
          at: "."
      - restore_cache:
          keys:
            - cargo-v2-{{ checksum "Cargo.toml" }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Print version information
          command: rustc --version; cargo --version
      - run:
          name: Build and test with nightly Rust
          command: cargo junit --name test_nightly_output.xml
      - store_test_results:
          path: test_nightly_output.xml
  coverage:
    docker:
      - image: ragnaroek/kcov:v33
        entrypoint: /bin/bash
    working_directory: /mnt/crate
    steps:
      - checkout
      - attach_workspace:
          at: "."
      - run: mkdir target/coverage
      - run:
          name: Rerun the tests collecting coverage
          command: |
            for file in ./target/debug/*; do
              if test -x $file; then
                kcov --verify --exclude-pattern=tests \
                  --exclude-path=src/testmocks.rs \
                  target/coverage/$(basename $file) \
                  $file --quiet
              fi
            done
            kcov --merge target/coverage-merged target/coverage/*
      - store_artifacts:
          path: target/coverage
          destination: coverage
      - store_artifacts:
          path: target/coverage-merged
          destination: coverage-merged
      - persist_to_workspace:
          root: "."
          paths:
            - target/coverage
  codecov_upload:
    docker:
      - image: buildpack-deps:curl
    working_directory: /mnt/crate
    steps:
      # Codecov uploader needs the source and binaries
      # exactly as everything was during the test run.
      - checkout
      - attach_workspace:
          at: "."
      - run:
          name: Upload to Codecov
          command: bash <(curl -s https://codecov.io/bash)

workflows:
  version: 2
  test_all_and_coverage:
    jobs:
      - cargo_fetch
      - test:
          requires:
            - cargo_fetch
      - test_release:
          requires:
            - cargo_fetch
      - test_nightly:
          requires:
            - cargo_fetch
      - coverage:
          requires:
            - test
      - codecov_upload:
          requires:
            - coverage
