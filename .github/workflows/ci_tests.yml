name: CI-Tests

on:
  push:
    branches: [ "main" ]
    paths-ignore: ["README.md", "CODE_OF_CONDUCT.md", "CONTRIBUTING.md"]
  pull_request:
    paths-ignore: ["README.md", "CODE_OF_CONDUCT.md", "CONTRIBUTING.md"]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -D warnings
  RUST_BACKTRACE: 1
  CARGO_INCREMENTAL: 0

jobs:
  vit_servicing_station:
    name: Vit Servicing Station Tests
    runs-on: ubuntu-latest
    env:
      CARGO_FLAGS: --verbose --locked
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "cov"
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: "1.65"  # it says it can read the rust-toolchain file, but it fails if we omit this
          components: llvm-tools-preview
      - name: Install Nextest
        run: curl -LsSf https://get.nexte.st/latest/linux | tar zxf - -C ${CARGO_HOME:-~/.cargo}/bin
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: Install deps
        run:
          sudo apt install -y protobuf-compiler libssl-dev libpq-dev libsqlite3-dev pkg-config
      - name: Run vit-ss tests
        run: |
          source <(cargo llvm-cov show-env --export-prefix)
          cargo build -p vit-servicing-station-cli -p vit-servicing-station-server
          cargo llvm-cov nextest --no-report --manifest-path ./src/vit-servicing-station/vit-servicing-station-cli/Cargo.toml --profile ci
          cargo llvm-cov nextest --no-report --manifest-path ./src/vit-servicing-station/vit-servicing-station-lib/Cargo.toml --profile ci
          cargo llvm-cov nextest --no-report --manifest-path ./src/vit-servicing-station/vit-servicing-station-server/Cargo.toml --profile ci
          cargo llvm-cov nextest --no-report --manifest-path ./src/vit-servicing-station/vit-servicing-station-tests/Cargo.toml --profile ci

  catalyst_toolbox:
    name: Catalyst Toolbox Tests
    runs-on: ubuntu-latest
    env:
      CARGO_FLAGS: --verbose --locked
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "cov"
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: "1.65"  # it says it can read the rust-toolchain file, but it fails if we omit this
          components: llvm-tools-preview
      - name: Install Nextest
        run: curl -LsSf https://get.nexte.st/latest/linux | tar zxf - -C ${CARGO_HOME:-~/.cargo}/bin
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: Install deps
        run:
          sudo apt install -y protobuf-compiler libssl-dev libpq-dev libsqlite3-dev pkg-config

      - name: Run catalyst-toolbox tests
        run: |
          source <(cargo llvm-cov show-env --export-prefix)
          cargo llvm-cov nextest --no-report --manifest-path ./src/catalyst-toolbox/catalyst-toolbox/Cargo.toml --profile ci
          cargo llvm-cov nextest --no-report --manifest-path ./src/catalyst-toolbox/snapshot-lib/Cargo.toml --profile ci

  voting_tools:
    name: Voting Tools Tests
    runs-on: ubuntu-latest
    env:
      CARGO_FLAGS: --verbose --locked
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "cov"
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: "1.65"  # it says it can read the rust-toolchain file, but it fails if we omit this
          components: llvm-tools-preview
      - name: Install Nextest
        run: curl -LsSf https://get.nexte.st/latest/linux | tar zxf - -C ${CARGO_HOME:-~/.cargo}/bin
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: Install deps
        run:
          sudo apt install -y protobuf-compiler libssl-dev libpq-dev libsqlite3-dev pkg-config

      - name: Run voting-tools tests
        run: |
          source <(cargo llvm-cov show-env --export-prefix)
          cargo llvm-cov nextest --no-report --manifest-path ./src/voting-tools-rs/Cargo.toml --profile ci

  chain-libs:
    name: Chain Libs Tests
    runs-on: ubuntu-latest
    env:
      CARGO_FLAGS: --verbose --locked
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "cov"
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: "1.65"  # it says it can read the rust-toolchain file, but it fails if we omit this
          components: llvm-tools-preview
      - name: Install Nextest
        run: curl -LsSf https://get.nexte.st/latest/linux | tar zxf - -C ${CARGO_HOME:-~/.cargo}/bin
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: Install deps
        run:
          sudo apt install -y protobuf-compiler libssl-dev libpq-dev libsqlite3-dev pkg-config

      - name: Run chain-libs tests
      - run: |
          source <(cargo llvm-cov show-env --export-prefix)
          cargo llvm-cov nextest --no-report --manifest-path ./src/chain-libs/cardano-legacy-address/Cargo.toml --profile ci
          cargo llvm-cov nextest --no-report --manifest-path ./src/chain-libs/chain-addr/Cargo.toml --profile ci
          cargo llvm-cov nextest --no-report --manifest-path ./src/chain-libs/chain-core/Cargo.toml --profile ci
          cargo llvm-cov nextest --no-report --manifest-path ./src/chain-libs/chain-crypto/Cargo.toml --profile ci
          cargo llvm-cov nextest --no-report --manifest-path ./src/chain-libs/chain-evm/Cargo.toml --profile ci
          cargo llvm-cov nextest --no-report --manifest-path ./src/chain-libs/chain-impl-mockchain/Cargo.toml --profile ci
          cargo llvm-cov nextest --no-report --manifest-path ./src/chain-libs/chain-network/Cargo.toml --profile ci
          cargo llvm-cov nextest --no-report --manifest-path ./src/chain-libs/chain-ser/Cargo.toml --profile ci
          cargo llvm-cov nextest --no-report --manifest-path ./src/chain-libs/chain-storage/Cargo.toml --profile ci
          cargo llvm-cov nextest --no-report --manifest-path ./src/chain-libs/chain-time/Cargo.toml --profile ci
          cargo llvm-cov nextest --no-report --manifest-path ./src/chain-libs/chain-vote/Cargo.toml --profile ci
          cargo llvm-cov nextest --no-report --manifest-path ./src/chain-libs/imhamt/Cargo.toml --profile ci
          cargo llvm-cov nextest --no-report --manifest-path ./src/chain-libs/sparse-array/Cargo.toml --profile ci
          cargo llvm-cov nextest --no-report --manifest-path ./src/chain-libs/typed-bytes/Cargo.toml --profile ci
          cargo llvm-cov nextest --no-report --manifest-path ./src/chain-wallet-libs/bindings/wallet-c/Cargo.toml --profile ci
          cargo llvm-cov nextest --no-report --manifest-path ./src/chain-wallet-libs/bindings/wallet-core/Cargo.toml --profile ci
          cargo llvm-cov nextest --no-report --manifest-path ./src/chain-wallet-libs/bindings/wallet-wasm-js/Cargo.toml --profile ci
          cargo llvm-cov nextest --no-report --manifest-path ./src/chain-wallet-libs/chain-path-derivation/Cargo.toml --profile ci
          cargo llvm-cov nextest --no-report --manifest-path ./src/chain-wallet-libs/hdkeygen/Cargo.toml --profile ci
          cargo llvm-cov nextest --no-report --manifest-path ./src/chain-wallet-libs/symmetric-cipher/Cargo.toml --profile ci
          cargo llvm-cov nextest --no-report --manifest-path ./src/chain-wallet-libs/wallet/Cargo.toml --profile ci

  jormungandr:
    name: Jormungandr Tests
    runs-on: ubuntu-latest
    env:
      CARGO_FLAGS: --verbose --locked
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "cov"
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: "1.65"  # it says it can read the rust-toolchain file, but it fails if we omit this
          components: llvm-tools-preview
      - name: Install Nextest
        run: curl -LsSf https://get.nexte.st/latest/linux | tar zxf - -C ${CARGO_HOME:-~/.cargo}/bin
      - name: Install deps
        run:
          sudo apt install -y protobuf-compiler libssl-dev libpq-dev libsqlite3-dev pkg-config

      - name: Run jormungandr tests
        run: |
          source <(cargo llvm-cov show-env --export-prefix)
          cargo llvm-cov nextest --no-report --manifest-path ./src/jormungandr/jormungandr/Cargo.toml --profile ci

  jormungandr-integration:
    name: Jormungandr Integration Tests
    runs-on: ubuntu-latest
    env:
      CARGO_FLAGS: --verbose --locked
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "cov"
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: "1.65"  # it says it can read the rust-toolchain file, but it fails if we omit this
          components: llvm-tools-preview
      - name: Install Nextest
        run: curl -LsSf https://get.nexte.st/latest/linux | tar zxf - -C ${CARGO_HOME:-~/.cargo}/bin
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: Install deps
        run:
          sudo apt install -y protobuf-compiler libssl-dev libpq-dev libsqlite3-dev pkg-config

      - name: Run jormungandr-integration tests
        run: |
          source <(cargo llvm-cov show-env --export-prefix)
          cargo build -p jcli -p jormungandr -p explorer
          cargo llvm-cov nextest --no-report --manifest-path ./src/jormungandr/testing/jormungandr-integration-tests/Cargo.toml --profile ci

  code-coverage:
    name: Generage and publish code coverage
    runs-on: ubuntu-latest
    needs: [vit_servicing_station, catalyst_toolbox, voting_tools, chain-libs, jormungandr, jormungandr-integration]
    steps:
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "cov"
      - name: Generate lcov.info
        run: cargo llvm-cov report --lcov --output-path ./lcov.info

      - name: Upload code coverage to coveralls.io
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: "./lcov.info"

  wallet-js-binding:
    name: Wallet JS Binding Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable

    - uses: jetli/wasm-pack-action@v0.3.0
      with:
        version: 'latest'

    - name: Build wasm package
      run: |
        cd src/chain-wallet-libs/bindings/wallet-wasm-js
        wasm-pack build --release --target=nodejs -d pkg

    - name: Build JS package
      run: |
        cd src/chain-wallet-libs/bindings/wallet-wasm-js/js
        rm package.json
        cp package_test.json package.json
        npm install

    - name: Run JS tests
      run: |
        cd src/chain-wallet-libs/bindings/wallet-wasm-js/js-test
        npm install
        npm test

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "cov"
      - name: Install deps
        run:
          sudo apt install -y protobuf-compiler libssl-dev libpq-dev libsqlite3-dev pkg-config
      - name: Clippy and fmt
        uses: actions-rs/toolchain@v1
        with:
          toolchain: "1.65"  # it says it can read the rust-toolchain file, but it fails if we omit this
          components: rustfmt, clippy
      - run: scripts/check-fmt.sh
